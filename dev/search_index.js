var documenterSearchIndex = {"docs":
[{"location":"#MDToolbox.jl","page":"MDToolbox.jl","title":"MDToolbox.jl","text":"","category":"section"},{"location":"","page":"MDToolbox.jl","title":"MDToolbox.jl","text":"MDToolbox.jl is a Julia package for molecular dynamics (MD) trajectories analysis and modeling of biomolecules. It consists of a collection of functions covering the following types of scientific computations:","category":"page"},{"location":"","page":"MDToolbox.jl","title":"MDToolbox.jl","text":"I/O for trajectory, coordinate, and topology files used for MD simulation\nNew complex type for containing and operating molecular dynamics trajecory data\nFlexible atom selections\nLeast-squares fitting of structures\nPotential mean force (PMF) or free energy profile from scattered data\nStatistical estimates (WHAM and MBAR methods) from biased data\nDimensional reductions (Principal Component Analysis, and others)\nOther utility functions","category":"page"},{"location":"","page":"MDToolbox.jl","title":"MDToolbox.jl","text":"Unique point of MDToolbox is that it is a pure Julia package; all codes are written with Julia.  This make developers easy to maintain the package codes. ","category":"page"},{"location":"","page":"MDToolbox.jl","title":"MDToolbox.jl","text":"","category":"page"},{"location":"#Reduction","page":"MDToolbox.jl","title":"Reduction","text":"","category":"section"},{"location":"","page":"MDToolbox.jl","title":"MDToolbox.jl","text":"pca(X::AbstractMatrix; k=nothing)","category":"page"},{"location":"#MDToolbox.pca-Tuple{AbstractArray{T,2} where T}","page":"MDToolbox.jl","title":"MDToolbox.pca","text":"pca(X::AbstractMatrix; k=dimension) -> F\n\nPerform principal component analysis (PCA). PCA captures degrees of freedom which have the largest variances. Input data X should belong to AbstractMatrix type and its columns corresponds to variables, rows are frames. \n\nReturns a NamedTuple object F which contains the principal components in F.projection,  the prncipal modes in the columns of the matrix F.mode, and the variances of principal components in F.variance. \n\nIf k=dimension is specified, the randomized SVD is used for reducing memory.  This algorithm first project the data into a randomly selected k+2-dimensional space,  then PCA is performed in the projected data. See the references for details.  Note that if the dimension of X is larger than 5000, the randomized SVD is forcibly used with k=1000. \n\nExample\n\njulia> using MDToolbox, Plots, Statistics\njulia> X = cumsum(rand(1000, 10))\njulia> F = pca(X)\njulia> plot(F.projection[:, 1], F.projection[:, 2])\n\nReferences\n\nHalko, N., Martinsson, P.-G., Shkolnisky, Y. & Tygert, M. \nAn Algorithm for the Principal Component Analysis of Large Data Sets. \nSIAM J. Sci. Comput. 33, 2580â€“2594 (2011).\n\n\n\n\n\n","category":"method"},{"location":"#Index","page":"MDToolbox.jl","title":"Index","text":"","category":"section"},{"location":"","page":"MDToolbox.jl","title":"MDToolbox.jl","text":"","category":"page"}]
}
